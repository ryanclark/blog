{"version":3,"sources":["webpack:///./src/components/bio/Bio.tsx","webpack:///./src/components/warning/Warning.tsx","webpack:///./src/templates/BlogPost.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/logo/Logo.tsx","webpack:///./src/components/icons/GitHubIcon.tsx","webpack:///./src/components/icons/TwitterIcon.tsx","webpack:///./src/components/layout/Layout.tsx","webpack:///./src/components/layout/index.ts","webpack:///./src/components/seo/SEO.tsx","webpack:///./src/components/seo/index.ts"],"names":["bioQuery","Bio","Object","core_browser_esm","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","author","social","style","display","alignItems","marginBottom","rhythm","gatsby_image_default","a","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","target","href","twitter","_4007731267","Warning","styled_base_browser_esm","name","styles","Title","pageQuery","BlogPostTemplate","props","post","markdownRemark","siteTitle","title","warning","frontmatter","disqusConfig","url","pathContext","slug","layout","location","seo","description","excerpt","assign","scale","marginTop","date","dangerouslySetInnerHTML","__html","html","lib","shortname","config","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography","n","Typography","baseFontSize","baseLineHeight","bodyFontFamily","overrideStyles","_ref","options","adjustFontSizeTo","color","textDecoration","StaticQueryContext","React","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","shape","DollarSign","Tilde","LogoText","Logo","GitHubIcon","xmlns","x","y","width","height","viewBox","id","TwitterIcon","extends_default","fill","Container","LogoLink","Link","SocialLink","Header","SocialIcons","Main","Layout","boxShadow","to","fontFamily","SEO","lang","keywords","_3497927624","metaDescription","meta","concat","content","property","length","join","Helmet_default","htmlAttributes","titleTemplate"],"mappings":"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","file":"component---src-templates-blog-post-tsx-55170dfe89bf8d80733f.js","sourcesContent":["import React from 'react';\nimport Image from 'gatsby-image';\n\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport { rhythm } from '../../utils/typography';\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport function Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n              alignItems: 'center',\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n\n            <div>\n              A blog by me, <strong>{author}</strong>. <a target=\"_blank\" href={`https://twitter.com/${social.twitter}`}>Follow me on Twitter!</a>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nexport const Warning = styled('div')`\n  background: #FEEFB3;\n  border: 1px solid rgba(0,0,0,.05);\n  color: rgba(0,0,0,.8);\n  border-radius: 3px;\n  margin: 10px 0 20px;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  \n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    fill: rgba(0, 0, 0, 0.8);\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { graphql } from 'gatsby';\nimport { DiscussionEmbed } from 'disqus-react';\n\nimport { Bio } from '../components/bio';\nimport { Layout } from '../components/layout';\nimport { SEO } from '../components/seo';\nimport { rhythm, scale } from '../utils/typography';\nimport { Warning } from '../components/warning/Warning';\n\ninterface BlogPostTemplateProps {\n  location: Location;\n  data: any;\n  pageContext: any;\n  pathContext: {\n    slug: string;\n  };\n}\n\nconst Title = styled('h1')`\n  font-family: Oswald, sans-serif;\n  text-transform: uppercase;\n  font-size: 100px;\n  max-width: 660px;\n  line-height: 110px;\n  color: #282A36;\n  margin-bottom: 35px;\n  \n  @media (max-width: 800px) {\n    font-size: 42px;\n    line-height: 48px;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        warning\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n\nfunction BlogPostTemplate(props: BlogPostTemplateProps) {\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n\n  const warning = post.frontmatter.warning && <Warning>{ post.frontmatter.warning }</Warning>;\n\n  const disqusConfig = {\n    url: `http://ryanclark.me/${props.pathContext.slug}`,\n    title: post.frontmatter.title,\n  };\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Title>{post.frontmatter.title}</Title>\n      <p\n        style={{\n          ...scale(-1 / 5),\n          display: `block`,\n          marginBottom: rhythm(1),\n          marginTop: rhythm(-1),\n        }}\n      >\n        {post.frontmatter.date}\n      </p>\n      { warning }\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      <Bio />\n\n      <DiscussionEmbed shortname=\"rynclark\" config={disqusConfig} />\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\n\nconst typography = new Typography({\n  baseFontSize: '16px',\n  baseLineHeight: '26px',\n  bodyFontFamily: ['Open Sans', 'sans-serif'],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#007acc\",\n      textDecoration: \"none\",\n    },\n  }),\n});\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n\nexport default typography;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst DollarSign = styled('div')`\n  color: #56E386;\n  margin-right: 14px;\n`;\n\nconst Tilde = styled('div')`\n  color: #93a1a1;\n  margin-right: 10px;\n  position: relative;\n  top: -1px;\n`;\n\nconst LogoText = styled('div')`\n  display: inline-flex;\n  align-items: center;\n  font-family: menlo, monospace;\n  font-weight: 600;\n  color: #F36964;\n  font-size: 28px;\n  position: relative;\n`;\n\nexport function Logo() {\n  return (\n    <LogoText>\n      <DollarSign>➜</DollarSign>\n      <Tilde>~</Tilde>\n      ryan.clark\n    </LogoText>\n  );\n}\n","import React from 'react';\n\nexport function GitHubIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <g id=\"surface1\">\n        <path d=\"M 4.0625 4 C 4.0625 4 3.53125 4.925781 3.53125 6.5 C 3.53125 7.546875 3.765625 8.125 3.9375 8.40625 C 2.734375 9.660156 2 11.347656 2 13.53125 C 2 19.125 5.527344 21 12 21 C 18.472656 21 22 19.125 22 13.53125 C 22 11.269531 21.304688 9.574219 20.15625 8.34375 C 20.441406 7.488281 20.769531 5.871094 19.96875 4 C 17.582031 4 15.570313 5.839844 15.5 5.90625 C 14.386719 5.660156 13.210938 5.53125 12 5.53125 C 10.761719 5.53125 9.542969 5.6875 8.40625 5.96875 C 6.808594 4.378906 4.886719 4 4.0625 4 Z M 15.21875 12 C 15.820313 11.992188 16.386719 12.054688 16.875 12.21875 C 18.179688 12.660156 19 13.945313 19 15.375 C 18.996094 19.339844 16.996094 20 11.875 20 C 8.066406 20 4.96875 19.285156 4.96875 15.5 C 4.96875 14.054688 5.71875 13.226563 6.25 12.71875 C 7.417969 11.601563 9.257813 12.15625 11.875 12.15625 C 13.0625 12.15625 14.214844 12.011719 15.21875 12 Z M 8 14 C 7.449219 14 7 14.671875 7 15.5 C 7 16.328125 7.449219 17 8 17 C 8.550781 17 9 16.328125 9 15.5 C 9 14.671875 8.550781 14 8 14 Z M 16 14 C 15.449219 14 15 14.671875 15 15.5 C 15 16.328125 15.449219 17 16 17 C 16.550781 17 17 16.328125 17 15.5 C 17 14.671875 16.550781 14 16 14 Z \"/>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function TwitterIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox=\"0 0 48 48\" width=\"1em\" height=\"1em\" {...props}>\n      <g id=\"surface1\">\n        <path fill=\"#03A9F4;\" d=\"M 42 12.429688 C 40.675781 13.015625 39.253906 13.40625 37.753906 13.589844 C 39.277344 12.683594 40.453125 11.238281 41.003906 9.53125 C 39.574219 10.371094 37.992188 10.984375 36.3125 11.308594 C 34.96875 9.882813 33.050781 9 30.925781 9 C 26.847656 9 23.539063 12.277344 23.539063 16.320313 C 23.539063 16.890625 23.605469 17.449219 23.730469 17.988281 C 17.59375 17.683594 12.148438 14.765625 8.507813 10.335938 C 7.867188 11.417969 7.507813 12.683594 7.507813 14.023438 C 7.507813 16.5625 8.808594 18.800781 10.792969 20.117188 C 9.582031 20.082031 8.441406 19.742188 7.445313 19.203125 C 7.445313 19.226563 7.445313 19.257813 7.445313 19.289063 C 7.445313 22.839844 9.992188 25.796875 13.367188 26.472656 C 12.75 26.640625 12.097656 26.734375 11.425781 26.734375 C 10.949219 26.734375 10.484375 26.679688 10.035156 26.597656 C 10.972656 29.5 13.699219 31.621094 16.933594 31.683594 C 14.402344 33.644531 11.21875 34.820313 7.757813 34.820313 C 7.160156 34.820313 6.574219 34.785156 5.996094 34.714844 C 9.269531 36.785156 13.152344 38 17.320313 38 C 30.90625 38 38.339844 26.84375 38.339844 17.164063 C 38.339844 16.847656 38.328125 16.53125 38.3125 16.222656 C 39.761719 15.195313 41.011719 13.90625 42 12.429688 \" />\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../../utils/typography';\nimport { Logo } from '../logo';\nimport { GitHubIcon, TwitterIcon } from '../icons';\n\ninterface LayoutProps {\n  location: Location;\n  title: string;\n  children: any;\n}\n\nconst Container = styled('div')`\n  max-width: 1200px;\n  padding-top: 50px;\n  margin: 0 auto;\n`;\n\nconst LogoLink = styled(Link)`\n  text-decoration: none;\n  box-shadow: none;\n  \n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst SocialLink = styled('a')`\n  margin-left: 15px;\n  svg {\n    fill: #262626;\n  }\n`;\n\nconst Header = styled('header')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media (max-width: 800px) {\n    padding: 0 15px;\n  }\n`;\n\nconst SocialIcons = styled('header')`\n  display: flex;\n  \n  svg {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nconst Main = styled('main')`\n  max-width: 800px;\n  margin: 100px auto 0;\n  \n  @media (max-width: 800px) {\n    margin: 20px auto 0;\n    padding: 10px 15px;\n  }\n`;\n\nexport function Layout(props: LayoutProps) {\n  const { location, title, children } = props;\n\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3\n        style={{\n          fontFamily: `Montserrat, sans-serif`,\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n  return (\n    <Container>\n      <Header>\n        <LogoLink to=\"/\">\n          <Logo />\n        </LogoLink>\n\n        <SocialIcons>\n          <SocialLink href=\"https://github.com/ryanclark\" target=\"_blank\"><GitHubIcon /></SocialLink>\n          <SocialLink href=\"https://twitter.com/rynclark\" target=\"_blank\"><TwitterIcon /></SocialLink>\n        </SocialIcons>\n      </Header>\n      <Main>{children}</Main>\n    </Container>\n  );\n}\n","export * from './Layout';\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface Meta {\n  name: string | undefined;\n  content: string | undefined;\n  property: string | undefined;\n}\n\ninterface SEOProps {\n  description?: string;\n  lang?: string;\n  meta?: Meta[];\n  keywords?: string[];\n  title: string;\n}\n\nexport function SEO(props: SEOProps) {\n  const { description, lang, title } = props;\n\n  const keywords = props.keywords || [];\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  const meta = [\n    ...(props.meta || []),\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: title,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:creator`,\n      content: site.siteMetadata.author,\n    },\n    {\n      name: `twitter:title`,\n      content: title,\n    },\n    {\n      name: `twitter:description`,\n      content: metaDescription,\n    },\n  ].concat(\n    keywords.length > 0\n      ? {\n        name: `keywords`,\n        content: keywords.join(`, `),\n      }\n      : []\n  );\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={meta}\n    />\n  );\n}\n","export * from './SEO';\n"],"sourceRoot":""}